/*drop table nyt-bigquery-beta-workspace.ruby_data.Channel_Mix;

create or replace table nyt-bigquery-beta-workspace.ruby_data.Channel_Mix
partition by Date 
AS
*/

WITH BASE AS(

SELECT 
Date,
t.year,
t.week,
t.month,
REGEXP_REPLACE(SPLIT(pair, ':')[SAFE_OFFSET(0)], r'^"|"$', '') as sor_prod,
      REGEXP_REPLACE(SPLIT(pair, ':')[SAFE_OFFSET(1)], r'^"|"$', '') value
FROM `nyt-bigquery-beta-workspace.ruby_data.Channel_Mix_Upload` t,
UNNEST(SPLIT(REGEXP_REPLACE(to_json_string(t), r'{{|}}', ''))) pair
)


select 
  year, 
  week, 
  month, 
  Date,


--create campaign type field
 case when regexp_contains(lower(sor_prod),'_conv') then 'conversion'
      when regexp_contains(lower(sor_prod),'_cont') then 'content'
      when regexp_contains(lower(sor_prod),'_eng') then 'engagement'
      else null end
      as campaign_type,

 --create product_advertised field
 case when regexp_contains(lower(sor_prod),'^ada') then 'ADA'
      when regexp_contains(lower(sor_prod),'^digi') then 'Digi'
      when regexp_contains(lower(sor_prod),'^hd') then 'HD'
      when regexp_contains(lower(sor_prod),'^games') then 'Games'
      when regexp_contains(lower(sor_prod),'^cook') then 'Cooking'
 else null
 end as product_advertised,

--create platform field
case when regexp_contains(lower(sor_prod),'_sc') then 'SnapChat'
      when regexp_contains(lower(sor_prod),'_tw') then 'Twitter'
      when regexp_contains(lower(sor_prod),'fb_tafi') then 'Facebook - Tafi'
      when regexp_contains(lower(sor_prod),'fb') then 'Facebook'
      when regexp_contains(lower(sor_prod),'apple') then 'Appple'
      when regexp_contains(lower(sor_prod),'google') then 'Google'
      when regexp_contains(lower(sor_prod),'_display') then 'Display'
      when regexp_contains(lower(sor_prod),'_search') then 'Search'  
   
 else null
 end as ad_platform,

--create spend
  sum(case when regexp_contains(lower(sor_prod),'spend') 
     then safe_cast(value as integer) 
     else null end) as spend,

 --create starts 
  sum(case when regexp_contains(lower(sor_prod),'start') 
     then safe_cast(value as integer) 
     else null end) as starts

from base
where sor_prod not in ('{"Year','Day','Week','Date','Month','Quarter')
and Date = current_date() - 1
group by 1,2,3,4,5,6,7






